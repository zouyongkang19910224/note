
分区规划及使用
磁道
扇区：默认的大小是512字节

一个硬盘的“艺术”之旅
识别硬盘==》分区规划==》格式化==>挂载使用

一  识别硬盘
lsblk    #列出当前系统所有识别的硬盘
disk（分区）   part（硬盘）
二  分区规划
MBR/msdos   分区模式
主分区   扩展分区   逻辑分区
1～4个主分区   or   0～3个主分区+1个扩展分区（N个逻辑分区）
在扩展分区基础上划分逻辑分区，最大支持划分的硬盘空间是2.2T
扩展分区不能格式化

GPT  分区模式
划分128个主分区
最大支持的硬盘空间是18EB
1EB=1000PB
1PB=1000TB
厂商1TB=1000GB
计算机1TiB=1024GiB

fdisk(MBR)
fdisk /dev/vdb   fdisk  硬盘
n创建新的分区-->回车-->回车-->回车-->在last结束时+1G  w保存
p查看分区表
n创建新的分区-->回车-->回车-->回车-->在last结束时+2G  w保存
n创建扩展分区-->回车-->回车-->回车-->在last结束时回车  w保存
d删除分区
w保存并退出

mkfs   格式化
blkid  查看格式化格式
mkdir /mypart1
mount /dev/vdb1 /mypart1
df -h
/dev/vda1        10G  3.0G  7.1G   30% /
devtmpfs        906M     0  906M    0% /dev
tmpfs           921M   80K  921M    1% /dev/shm
tmpfs           921M   17M  904M    2% /run
tmpfs           921M     0  921M    0% /sys/fs/cgroup
/dev/vdb1       976M  2.6M  907M    1% /mypart1
df -h


开机自动挂载(本文件写错了会导致开不了机)
ls /etc/fstab
vim /etc/fstab
设备路径        挂载点      类型      参数        备份标记     检测顺序
/dev/vdb1   /mypart1  ext4  defaults    0(1备份)   0（1检测）
挂载的分区必须先格式化

需要将检测的设备卸载
umount /mypart1
df -h  查看挂载点是否存在
mount -a   #读取/etc/fstab文件进行从新挂载

总结：
1.列出识别硬盘：lsblk
2.划分新分区 fdisk
3. partprobe  刷新分区表
3.格式化  mkfs.ext4  mkfs.xfs ---->blkid 查看文件系统
4.挂载使用  mount--->  df -h 进行查看
5.开机自动挂载---> vim /etc/fstab
/dev/vdb1   /mypart1  ext4  defaults    0(1备份)   0（1检测）

综合分区
fdisk /dev/vdb
3个主分区 分别为 1G 2G 3G
划分扩展分区  占用所有剩余空间
在划分2个逻辑分区 2G 3G


LVM逻辑卷
逻辑卷作用：1.整合分散的空间  
             2.可以动态扩大空间

逻辑卷创建
零散的空间存储--->整合的虚拟磁盘--->虚拟的分区-->格式化--->挂载使用
面粉--->大面团--->小面团--->蒸--->吃
砖--->大房子--->打隔断--->装修--->入住
物理卷（PV）--->卷组（VG）--->逻辑卷（LV）
将众多的物理卷（PV），组成卷组（VG），在从卷组中划分出逻辑卷（LV）

一 创建逻辑卷   
    功能           物理卷管理      卷组管理     逻辑卷管理
Scan    扫描       pvscan     vgscan     lvscan
Create  创建      pvcreate    vgcreate   lvcreate
Display 显示      pvdisplay   vgdisplay  lvdisplay
Remove  删除      pvremove    vgremove   lvremove
Extend  扩展      pvextend    vgextend   lvextend

1.创建卷组  
  卷组名    设备路径
vgcreate systemvg /dev/vdc[1-2]

2.创建逻辑卷
格式：lvcreate -n 逻辑卷名字 -L 大小 卷组名
lvcreate -n mylv -L 16G systemvg
3.逻辑卷的使用

二 扩展逻辑卷
1.卷组有足够的剩余空间   直接扩展逻辑卷的空间
lvextend -L 18G /dev/systemvg/mylv
2.扩展逻辑卷的文件系统
刷新ext4文件系统：resize2fs
刷新xfs文件系统：xfs_growfs

resize2fs /dev/systemvg/mylv
df -h

2.卷组没有足够的剩余空间  扩展卷组
1.扩展卷组
vgextend systemvg /dev/vdc3
2.扩展逻辑卷的空间
lvextend -L 25G /dev/systemvg/mylv
3.刷新ext4文件系统
resize2fs /dev/systemvg/mylv

逻辑卷可以做缩减（了解）
ext4文件系统支持缩减
xfs文件系统不支持缩减

卷组划分空间的单位PE，默认 1PE=4M
1.vgdisplay systemvg  查询
PE Size   4.00 MiB

创建卷组的时候设置PE大小
vgcreate -s  PE大小 卷组名 空闲分区
vgchange -s  PE大小 卷组名 空闲分区

创建逻辑卷的时候指定PE个数
lvcreate -s PE个数  -n 逻辑卷名 卷组名

显示卷组的详细信息
vgdisplay systemvg

修改卷组PE大小
vgchange -s 1M systemvg

以PE的个数，创建逻辑卷
vlcreate -l 50 -n database systemvg

逻辑卷的删除
先删除逻辑卷，再删除卷组，最后删除物理卷


shell脚本基础
脚本/程序：一个可以执行的文本文件，可以带来某种功能
vim /root/hello.sh
chmod +x /root/hello.sh 
增加脚本的执行权限
开头加#！

简单脚本技巧
重定向输出
>:正确信息重定向
2>:错误信息重定向
&>：正确与错误信息重定向

单引号'':取消所有特殊字符的含义
$[]:运算  + - * /

$（）与反撇号``：将命令的输出结果，作为参数，参与命令的运行
mkdir stu-`date +%F`
stu-2018-07-10

mkdir nsd-$(date +%F)
nsd-2018-07-10

mkdir $(hostname)-$(date +%F)
server0.example.com-2018-07-10

创建用户的脚本
vim /root/user.sh

#!/bin/bash
useradd nsd08
echo 用户nsd08创建成功
echo 123456 | passwd --stdin nsd08 &. /opt/1.txt
echo 用户nsd08密码设置成功

/dev/null（黑洞）   不想显示的多于信息可以导入这个文件中   &> /dev/null
useradd nsd08 &> /dev/null
echo 123456 | passwd --stdin nsd08 &> /dev/null

为了增加脚本的灵活度，环境的多变性，方便重复使用一个值
变量（容器）
存储的值在变化，以不变的名称，存放可以变化的值
#!/bin/bash
a=nsd13   设置容器为a
useradd $a &> /dev/null
echo 用户$a创建成功 
echo 123456 | passwd --stdin $a &> /dev/null
echo 用户$a密码设置成功

定义变量
等号两边不能有空格
变量名只能由字母、数字、下划线组成，区分大小写
变量名不能以数字开头，不要使用关键字和特殊字符
若指定的变量名已存在，

查看/引用变量
引用变量值：$变量名
查看变量值：echo $变量名、echo ${变量名}
a=rhel
echo $a
rhel
echo ${a}7
rhel7

随机数字
echo $RANDOM





HTTP服务基础
基于B/S（Borwser/Ferver）架构的网页服务
服务端提供网页
浏览器下载并显示网页


Listen:监听地址：端口：80
serverName:本站点注册的DNS名称（空缺）
DocumentRoot:网页根目录（/var/www/html）
DirectoryIndex:起始页/首页文件名（）


虚拟机server0:
1安装httpd（Apache）软件
[root@server0 ~]# systemctl restart httpd
[root@server0 ~]# systemctl enable httpd

书写页面
[root@server0 ~]# echo '<h1>web test01' > /var/www/html/index.html
[root@server0 ~]# cat /var/www/html/index.html
<h1>web test01
[root@server0 ~]# firefox 172.25.0.11

DNS服务器classroom.example.com:将域名解析为IP地址
server0.example.com
www0.example.com
webapp0.example.com

虚拟机server0:
1修改配置文件/etc/httpd/conf/httpd.conf
/ServerName

ServerName server0.example.com:80

systemctl restart httpd

firefox server0.example.com
修改网页存放路径
1修改配置文件/etc/httpd/conf/httpd.conf
DocumentRoot "/var/www/myweb"

/DocumentRoot

echo '<h1>Wo Shi Myweb' > /var/www/myweb/index.html

systemctl restart httpd

firefox server0.example.com

虚拟web主机
作用：由同一台服务器提供多个不同的web站点
区分方式（构建模式）
基于域名的虚拟机
基于端口的虚拟机
基于IP地址的虚拟机

搭建基于域名的web主机
/etc/httpd/conf/httpd.conf   #配置文件
/etc/httpd/conf.d/*.conf     #调用配置文件

<VirtualHost  *:80>
ServerName  此站点的DNS名称
DocumentRoot  此站点的网页根目录
</VirtualHost>

mkdir /var/www/myweb/private

echo '<h1>wo shi nsd03' > /var/www/myweb/private/index.html


vim /etc/httpd/conf.d/nsd02.conf

<Directory /var/www/myweb/private>
Require ip 172.25.0.11
</Directory>

firefox server0.example.com/private

vim /etc/httpd/conf.d/nsd02.conf
<Directory /webroot>
Require all granted   #允许所有人访问
</Directory>

firefox server0.example.com


注意事项：
  一旦使用虚拟Web主机
  主配置文件中ServerName与DocumentRoot失效
  所有的站点都必须使用虚拟Web主机来完成

#########################################################

五、配置网页内容访问

• 使用 <Directory> 配置区段
– 每个文件夹自动继承其父目录的访问控制
– 除非针对子目录有明确设置

在 Web 网站 http://server0.example.com 的
DocumentRoot 目录下创建一个名为 private 的子目录

虚拟机Server0
1.查看http://server0.example.com 的DocumentRoot目录路径

[root@server0 /]# vim /etc/httpd/conf.d/nsd01.conf 

2.创建目录，建立网页文件
[root@server0 /]# mkdir /var/www/myweb/private
[root@server0 /]# echo '<h1>wo shi private' > /var/www/myweb/private/index.html
[root@server0 /]# cat /var/www/myweb/private/index.html
<h1>wo shi private
[root@server0 /]# 

3.本机及虚拟机desktop0，分别测试
[root@server0 ~]# firefox  server0.example.com/private
[root@desktop0 ~]# firefox  server0.example.com/private


4.从 server0 上,任何人都可以浏览 private 的内容,
   但是从其他系统不能访问这个目录的内容

[root@server0 /]# vim /etc/httpd/conf.d/nsd02.conf
 <Directory  /var/www/myweb/private>
    Require ip 172.25.0.11      #仅允许172.25.0.11
 </Directory>

[root@server0 /]# systemctl restart httpd

5.本机及虚拟机desktop0，分别测试
[root@server0 ~]# firefox  server0.example.com/private
[root@desktop0 ~]# firefox  server0.example.com/private

#######################################################
六、使用自定Web根目录

调整 Web 站点 http://server0.example.com 的网页
目录,要求如下:

1.新建目录 /webroot,作为此站点新的网页目录
# mkdir /webroot
# echo '<h1>wo shi webroot' > /webroot/index.html
# cat /webroot/index.html

2.修改虚拟Web主机配置文件/etc/httpd/conf.d/nsd01.conf
 <VirtualHost *:80>
  ServerName server0.example.com
  DocumentRoot /webroot
 </VirtualHost>

3.修改访问控制配置文件/etc/httpd/conf.d/nsd02.conf
 <Directory /webroot>
   Require all granted     #允许所有人访问
 </Directory>

4.重起httpd服务

5.SELinux策略,安全上下文值（标识）（路径的进入及配置文件读取）
 • 方式1:参照标准目录,重设新目录的属性
  – chcon [-R] --reference=模板目录   新目录

[root@server0 ~]# ls -Zd /var/www   #查看安全上下文
[root@server0 ~]# ls -Zd /webroot

[root@server0 ~]# chcon -R --reference=/var/www /webroot
[root@server0 ~]# ls -Zd /webroot

#########################################################
部署动态网站

静态网站的运行
• 服务端的原始网页 = 浏览器访问到的网页
– 由Web服务软件处理所有请求
– 文本(txt/html)、图片(jpg/png)等静态资源

动态网站的运行
• 服务端的原始网页 ≠ 浏览器访问到的网页
– 由Web服务软件接受请求,动态程序转后端模块处理
– PHP网页、Python网页、JSP网页......


虚拟机Server0
1.部署python页面文件
# cd /var/www/nsd02
# wget http://classroom.example.com/pub/materials/webinfo.wsgi
# cat webinfo.wsgi

2.方便用户的访问，页面跳转
[root@server0 /]# vim /etc/httpd/conf.d/nsd01.conf 
<VirtualHost *:80>
  ServerName webapp0.example.com
  DocumentRoot  /var/www/nsd02
  Alias   /   /var/www/nsd02/webinfo.wsgi
  #当客户端访问网页文件根目录时，实现页面跳转，将webinfo.wsgi呈现
</VirtualHost>

3.重起httpd服务验证
[root@server0 /]# systemctl restart httpd
[root@server0 /]# firefox webapp0.example.com

4.安装软件mod_wsgi,负责解析python页面的代码

5.修改虚拟Web主机配置文件，实现httpd进行翻译（WsgiScript）
[root@server0 /]# vim /etc/httpd/conf.d/nsd01.conf 
<VirtualHost *:80>
  ServerName webapp0.example.com
  DocumentRoot /var/www/nsd02
  WsgiScriptAlias /  /var/www/nsd02/webinfo.wsgi

</VirtualHost>

6.重起httpd服务验证
[root@server0 /]# systemctl restart httpd
[root@server0 /]# firefox webapp0.example.com

    UNIX时间戳:自1970-1-1 0:0:0算起，到达现在经历的秒数

7.修改虚拟主机侦听在端口8909
[root@server0 /]# vim /etc/httpd/conf.d/nsd01.conf 
Listen 8909
<VirtualHost *:8909>
  ServerName webapp0.example.com
  DocumentRoot /var/www/nsd02
  WsgiScriptAlias  /  /var/www/nsd02/webinfo.wsgi
</VirtualHost>

8.SELinux策略,非默认端口的开放
# semanage port -l | grep http
# semanage port -a -t http_port_t  -p tcp  8909
 
  # -a:添加    -t:类型     -p:协议  

# systemctl restart httpd
# firefox webapp0.example.com:8909


一、安全的web服务器（httpds安全的超文本传输协议 默认端口）
构建安全加密的服务器
基础设施
公钥
私钥
数字证书
数字证书授权中心

部署网站证书
wget http://classroom.example.com/pub/tls/certs/server0.crt

部署根证书
wget http://classroom.example.com/pub/example-ca.crt

部署私钥
wget http://classroom.example.com/pub/tls/private/server0.key

安装mod_ssl软件包
yum -y install mod_ssl

修改配置文件/etc/httpd/conf.d/ssl.conf
vim /etc/httpd/conf.d/ssl.conf

uocumentRoot "/var/www/html"
ServerName www0.example.com:443

SSLCertificateFile /etc/pki/tls/certs/server0.crt

SSLCertificateKeyFile /etc/pki/tls/private/server0.key

SSLCACertificateFile /etc/pki/tls/certs/example-ca.crt

systemctl restart httpd

[root@desktop0 ~]# firefox http://www0.example.com


基础邮件服务












